<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seculayer.web.management.dao.StorageDAO">
	<!-- ***** Storage Start ***** -->
	<select id="selectStorageList" resultType="map">
		SELECT 	storage_id, 
				storage_nm, 
				divide_yn,
				divide_keyword,
				org_log_backup_yn,
				use_event_yn,
				src_path, 
				index_path, 
				use_disk_manager, 
				store_path, 
				category_field, 
				categorys, 
				partition_field, 
				partition_format, 
				keep_days, 
				writer_count, 
				use_data_move, 
				move_path,
				default_yn
		FROM MGR_STORAGE
		ORDER BY ord_no
	</select>
	
	<select id="selectStorageEventList" resultType="map">
		SELECT 	storage_id,
				storage_nm,
				partition_field
		FROM MGR_STORAGE
		ORDER BY ord_no
	</select>
	
	<select id="selectStoragePartition" resultType="map">
		SELECT 	storage_id,
				storage_nm,
				partition_field
		FROM MGR_STORAGE
		WHERE storage_id = #{storage_id}
	</select>
	
	<select id="checkStorageId" resultType="int">
		SELECT COUNT(*)
		FROM MGR_STORAGE
		WHERE storage_id = #{storage_id}
	</select>
	
	<select id="checkStorageSrcPath" resultType="map">
		SELECT storage_id, 
			   storage_nm,
			   #{FLD_STOR_0003} as path_nm,
			   #{s_path_nm} as s_path_nm
		FROM MGR_STORAGE
		WHERE src_path = #{s_path}
		AND	  storage_id != #{storage_id}
	</select>
	
	<select id="checkStorageIndexPath" resultType="map">
		SELECT storage_id, 
			   storage_nm,
			   #{FLD_STOR_0004} as path_nm,
			   #{s_path_nm} as s_path_nm
		FROM MGR_STORAGE
		WHERE index_path = #{s_path}
		AND	  storage_id != #{storage_id}
	</select>
	
	<select id="checkStorageStorePath" resultType="map">
		SELECT storage_id, 
			   storage_nm,
			   #{FLD_STOR_0006} as path_nm,
			   #{s_path_nm} as s_path_nm
		FROM MGR_STORAGE
		WHERE store_path = #{s_path}
		AND	  storage_id != #{storage_id}
	</select>
	
	<select id="checkStorageMovePath" resultType="map">
		SELECT storage_id, 
			   storage_nm,
			   #{FLD_STOR_0012} as path_nm,
			   #{s_path_nm} as s_path_nm
		FROM MGR_STORAGE
		WHERE move_path = #{s_path}
		AND	  storage_id != #{storage_id}
	</select>
	
	<insert id="insertStorage" parameterType="map">
		<selectKey keyProperty="ord_no" resultType="long" order="BEFORE">
			SELECT MAX(ord_no) + 1 FROM MGR_STORAGE
		</selectKey>
		INSERT INTO MGR_STORAGE (
			storage_id, 
			storage_nm, 
			divide_yn,
			divide_keyword,
			org_log_backup_yn,
			use_event_yn,
			src_path, 
			index_path, 
			use_disk_manager, 
			store_path, 
			category_field, 
			categorys, 
			partition_field, 
			partition_format, 
			keep_days, 
			writer_count, 
			use_data_move, 
			move_path, 
			default_yn,
			ord_no,
			proc_id, 
			proc_ip, 
			proc_dt
		)
		VALUES (
			#{storage_id},
			#{storage_nm},
			#{divide_yn},
			#{divide_keyword},
			#{org_log_backup_yn},
			#{use_event_yn},
			#{src_path}, 
			#{index_path}, 
			#{use_disk_manager}, 
			#{store_path},
			#{category_field},
			#{categorys},
			#{partition_field}, 
			#{partition_format}, 
			#{keep_days}, 
			#{writer_count},
			#{use_data_move},
			#{move_path},
			'N',
			#{ord_no},
			#{proc_id},
			FN_IP_STD(#{proc_ip}),
			DATE_FORMAT(NOW(),'%Y%m%d%H%i%S')
		)
	</insert>
	
	<update id="updateStorage" parameterType="map">
		UPDATE MGR_STORAGE 
			SET	storage_nm 			= #{storage_nm}, 
				divide_yn 			= #{divide_yn}, 
				divide_keyword 		= #{divide_keyword}, 
				org_log_backup_yn 	= #{org_log_backup_yn}, 
				use_event_yn 		= #{use_event_yn}, 
				src_path 			= #{src_path}, 
				index_path 			= #{index_path}, 
				use_disk_manager 	= #{use_disk_manager}, 
				store_path 			= #{store_path}, 
				category_field		= #{category_field}, 
				categorys 			= #{categorys}, 
				partition_field 	= #{partition_field}, 
				partition_format 	= #{partition_format}, 
				keep_days 			= #{keep_days}, 
				writer_count 		= #{writer_count}, 
				use_data_move 		= #{use_data_move}, 
				move_path 			= #{move_path}, 
				proc_id 			= #{proc_id}, 
				proc_ip 			= FN_IP_STD(#{proc_ip}), 
				proc_dt 			= DATE_FORMAT(NOW(),'%Y%m%d%H%i%S')
		WHERE	storage_id = #{storage_id}
 	</update>
 	
 	<delete id="deleteStorage" parameterType="map">
		DELETE FROM MGR_STORAGE
		WHERE storage_id = #{storage_id}
 	</delete>
	<!-- ***** Storage End ***** -->	
</mapper>
